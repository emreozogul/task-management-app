name: Publish Release
on:
  push:
    tags:
      - 'v*'
    branches: '*'
  workflow_dispatch:

env:
  APP_NAME: "XTMA"

jobs:
  changelog:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build changelog
        id: build_changelog
        run: |
          PREV_TAG=$(git tag --list 'v*' | sort -V | tail -n2 | head -n1)
          CHANGELOG=$(git log $PREV_TAG...${{ github.ref_name }} --pretty=format:'* %s')
          echo "changelog<<EOF" >> $GITHUB_ENV
          echo "$CHANGELOG" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
    outputs:
      changelog: ${{ steps.build_changelog.outputs.changelog }}

  build-arm:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-unknown-linux-gnu

      - name: Install ARM dependencies
        run: |
          sudo dpkg --add-architecture arm64
          sudo apt-get update -y || true
          sudo apt-get install -y --no-install-recommends \
            gcc-aarch64-linux-gnu \
            g++-aarch64-linux-gnu \
            libc6-dev-arm64-cross \
            crossbuild-essential-arm64 \
            pkg-config:arm64 \
            libwebkit2gtk-4.0-dev:arm64 \
            libssl-dev:arm64 \
            libgtk-3-dev:arm64 \
            libayatana-appindicator3-dev:arm64 \
            librsvg2-dev:arm64

      - name: Build ARM package
        run: npm run tauri build -- --target aarch64-unknown-linux-gnu

      - name: Upload deb bundle
        uses: actions/upload-artifact@v4
        with:
          name: ARM Debian File
          path: src-tauri/target/aarch64-unknown-linux-gnu/release/bundle/deb/*.deb

  release:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    needs: [changelog]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'

      - name: Setup Rust
        run: |
          rustup update --no-self-update

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Install Ubuntu dependencies
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev

      - name: Install frontend dependencies
        run: npm ci

      - name: Build Release
        uses: tauri-apps/tauri-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          tagName: ${{ github.ref_name }}
          releaseName: "${{ env.APP_NAME }} ${{ github.ref_name }}"
          releaseBody: |
            ${{needs.changelog.outputs.changelog}}
            See the assets to download and install this version.
          releaseDraft: true
          prerelease: false
